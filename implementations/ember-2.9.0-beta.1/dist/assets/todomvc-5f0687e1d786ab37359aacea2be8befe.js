"use strict";define("todomvc/app",["exports","ember","todomvc/resolver","ember-load-initializers","todomvc/config/environment"],function(e,t,n,o,l){var a=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,a=t.default.Application.extend({modulePrefix:l.default.modulePrefix,podModulePrefix:l.default.podModulePrefix,Resolver:n.default}),(0,o.default)(a,l.default.modulePrefix),e.default=a}),define("todomvc/components/todo-item",["exports","ember"],function(e,t){e.default=t.default.Component.extend({repo:t.default.inject.service(),tagName:"li",editing:!1,classNameBindings:["todo.completed","editing"],actions:{startEditing:function(){this.get("onStartEdit")(),this.set("editing",!0),t.default.run.scheduleOnce("afterRender",this,"focusInput")},doneEditing:function(e){this.get("editing")&&(t.default.isBlank(e)?this.send("removeTodo"):(this.set("todo.title",e.trim()),this.set("editing",!1),this.get("onEndEdit")()))},handleKeydown:function(e){13===e.keyCode?e.target.blur():27===e.keyCode&&this.set("editing",!1)},toggleCompleted:function(e){var n=this.get("todo");t.default.set(n,"completed",e.target.checked)},removeTodo:function(){this.get("repo").delete(this.get("todo"))}},focusInput:function(){this.element.querySelector("input.edit").focus()}})}),define("todomvc/components/todo-list",["exports","ember"],function(e,t){e.default=t.default.Component.extend({repo:t.default.inject.service(),tagName:"section",elementId:"main",canToggle:!0,allCompleted:t.default.computed("todos.@each.completed",function(){return this.get("todos").isEvery("completed")}),actions:{enableToggle:function(){this.set("canToggle",!0)},disableToggle:function(){this.set("canToggle",!1)},toggleAll:function(){var e=this.get("allCompleted");this.get("todos").forEach(function(n){return t.default.set(n,"completed",!e)})}}})}),define("todomvc/controllers/active",["exports","ember"],function(e,t){e.default=t.default.Controller.extend({todos:t.default.computed.filterBy("model","completed",!1)})}),define("todomvc/controllers/application",["exports","ember"],function(e,t){e.default=t.default.Controller.extend({repo:t.default.inject.service(),remaining:t.default.computed.filterBy("model","completed",!1),completed:t.default.computed.filterBy("model","completed"),actions:{createTodo:function(e){13!==e.keyCode||t.default.isBlank(e.target.value)||(this.get("repo").add({title:e.target.value.trim(),completed:!1}),e.target.value="")},clearCompleted:function(){this.get("model").removeObjects(this.get("completed"))}}})}),define("todomvc/controllers/completed",["exports","ember"],function(e,t){e.default=t.default.Controller.extend({todos:t.default.computed.filterBy("model","completed",!0)})}),define("todomvc/helpers/app-version",["exports","ember","todomvc/config/environment"],function(e,t,n){function o(){return l}e.appVersion=o;var l=n.default.APP.version;e.default=t.default.Helper.helper(o)}),define("todomvc/helpers/gt",["exports","ember"],function(e,t){function n(e){var t=o(e,2),n=t[0],l=t[1];return n>l}var o=function(){function e(e,t){var n=[],o=!0,l=!1,a=void 0;try{for(var i,r=e[Symbol.iterator]();!(o=(i=r.next()).done)&&(n.push(i.value),!t||n.length!==t);o=!0);}catch(e){l=!0,a=e}finally{try{!o&&r.return&&r.return()}finally{if(l)throw a}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();e.gt=n,e.default=t.default.Helper.helper(n)}),define("todomvc/helpers/pluralize",["exports","ember","ember-inflector"],function(e,t,n){function o(e){var t=l(e,2),o=t[0],a=t[1];return 1===a?o:(0,n.pluralize)(o)}var l=function(){function e(e,t){var n=[],o=!0,l=!1,a=void 0;try{for(var i,r=e[Symbol.iterator]();!(o=(i=r.next()).done)&&(n.push(i.value),!t||n.length!==t);o=!0);}catch(e){l=!0,a=e}finally{try{!o&&r.return&&r.return()}finally{if(l)throw a}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();e.pluralizeHelper=o,e.default=t.default.Helper.helper(o)}),define("todomvc/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e.default=t.default}),define("todomvc/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","todomvc/config/environment"],function(e,t,n){var o=n.default.APP,l=o.name,a=o.version;e.default={name:"App Version",initialize:(0,t.default)(l,a)}}),define("todomvc/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("todomvc/initializers/data-adapter",["exports","ember"],function(e,t){e.default={name:"data-adapter",before:"store",initialize:t.default.K}}),define("todomvc/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,n){e.default={name:"ember-data",initialize:t.default}}),define("todomvc/initializers/export-application-global",["exports","ember","todomvc/config/environment"],function(e,t,n){function o(){var e=arguments[1]||arguments[0];if(n.default.exportApplicationGlobal!==!1){var o,l=n.default.exportApplicationGlobal;o="string"==typeof l?l:t.default.String.classify(n.default.modulePrefix),window[o]||(window[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[o]}}))}}e.initialize=o,e.default={name:"export-application-global",initialize:o}}),define("todomvc/initializers/injectStore",["exports","ember"],function(e,t){e.default={name:"injectStore",before:"store",initialize:t.default.K}}),define("todomvc/initializers/store",["exports","ember"],function(e,t){e.default={name:"store",after:"ember-data",initialize:t.default.K}}),define("todomvc/initializers/transforms",["exports","ember"],function(e,t){e.default={name:"transforms",before:"store",initialize:t.default.K}}),define("todomvc/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e.default={name:"ember-data",initialize:t.default}}),define("todomvc/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("todomvc/router",["exports","ember","todomvc/config/environment"],function(e,t,n){var o=t.default.Router.extend({location:n.default.locationType,rootURL:n.default.rootURL});o.map(function(){this.route("active"),this.route("completed")}),e.default=o}),define("todomvc/routes/application",["exports","ember"],function(e,t){e.default=t.default.Route.extend({repo:t.default.inject.service(),model:function(){return this.get("repo").findAll()}})}),define("todomvc/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("todomvc/services/repo",["exports","ember"],function(e,t){e.default=t.default.Service.extend({lastId:0,data:null,findAll:function(){return this.get("data")||this.set("data",[])},add:function(e){var t=Object.assign({id:this.incrementProperty("lastId")},e);return this.get("data").pushObject(t),t},delete:function(e){this.get("data").removeObject(e)}})}),define("todomvc/templates/active",["exports"],function(e){e.default=Ember.HTMLBars.template({id:null,block:'{"statements":[["append",["helper",["todo-list"],null,[["todos"],[["get",["todos"]]]]],false]],"locals":[],"named":[],"yields":[],"blocks":[]}',meta:{moduleName:"todomvc/templates/active.hbs"}})}),define("todomvc/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:null,block:'{"statements":[["open-element","section",[]],["static-attr","id","todoapp"],["flush-element"],["text","\\n  "],["open-element","header",[]],["static-attr","id","header"],["flush-element"],["text","\\n    "],["open-element","h1",[]],["flush-element"],["text","todos"],["close-element"],["text","\\n    "],["open-element","input",[]],["static-attr","type","text"],["static-attr","id","new-todo"],["static-attr","class","new-todo"],["dynamic-attr","onkeydown",["helper",["action"],[["get",[""]],"createTodo"],null],null],["static-attr","placeholder","What needs to be done?"],["static-attr","autofocus",""],["flush-element"],["close-element"],["text","\\n  "],["close-element"],["text","\\n    "],["append",["unknown",["outlet"]],false],["text","\\n"],["block",["if"],[["helper",["gt"],[["get",["model","length"]],0],null]],null,4],["close-element"],["text","\\n"],["open-element","footer",[]],["static-attr","id","info"],["flush-element"],["text","\\n  "],["open-element","p",[]],["flush-element"],["text","Double-click to edit a todo"],["close-element"],["text","\\n  "],["open-element","p",[]],["flush-element"],["text","\\n    Created by\\n    "],["open-element","a",[]],["static-attr","href","http://github.com/cibernox"],["flush-element"],["text","Miguel Camba"],["close-element"],["text",",\\n    "],["open-element","a",[]],["static-attr","href","http://github.com/addyosmani"],["flush-element"],["text","Addy Osmani"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","p",[]],["flush-element"],["text","Part of "],["open-element","a",[]],["static-attr","href","http://todomvc.com"],["flush-element"],["text","TodoMVC"],["close-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","          "],["open-element","button",[]],["static-attr","id","clear-completed"],["dynamic-attr","onclick",["helper",["action"],[["get",[""]],"clearCompleted"],null],null],["flush-element"],["text","Clear completed"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["text","Completed"]],"locals":[]},{"statements":[["text","Active"]],"locals":[]},{"statements":[["text","All"]],"locals":[]},{"statements":[["text","      "],["open-element","footer",[]],["static-attr","id","footer"],["flush-element"],["text","\\n        "],["open-element","span",[]],["static-attr","id","todo-count"],["flush-element"],["open-element","strong",[]],["flush-element"],["append",["unknown",["remaining","length"]],false],["close-element"],["text"," "],["append",["helper",["pluralize"],["item",["get",["remaining","length"]]],null],false],["text"," left"],["close-element"],["text","\\n        "],["open-element","ul",[]],["static-attr","id","filters"],["flush-element"],["text","\\n          "],["open-element","li",[]],["flush-element"],["block",["link-to"],["index"],[["activeClass"],["selected"]],3],["close-element"],["text","\\n          "],["open-element","li",[]],["flush-element"],["block",["link-to"],["active"],[["activeClass"],["selected"]],2],["close-element"],["text","\\n          "],["open-element","li",[]],["flush-element"],["block",["link-to"],["completed"],[["activeClass"],["selected"]],1],["close-element"],["text","\\n        "],["close-element"],["text","\\n"],["block",["if"],[["get",["completed","length"]]],null,0],["text","      "],["close-element"],["text","\\n"]],"locals":[]}]}',meta:{moduleName:"todomvc/templates/application.hbs"}})}),define("todomvc/templates/completed",["exports"],function(e){e.default=Ember.HTMLBars.template({id:null,block:'{"statements":[["append",["helper",["todo-list"],null,[["todos"],[["get",["todos"]]]]],false]],"locals":[],"named":[],"yields":[],"blocks":[]}',meta:{moduleName:"todomvc/templates/completed.hbs"}})}),define("todomvc/templates/components/todo-item",["exports"],function(e){e.default=Ember.HTMLBars.template({id:null,block:'{"statements":[["open-element","div",[]],["static-attr","class","view"],["flush-element"],["text","\\n  "],["open-element","input",[]],["static-attr","type","checkbox"],["static-attr","class","toggle"],["dynamic-attr","checked",["unknown",["todo","completed"]],null],["dynamic-attr","onchange",["helper",["action"],[["get",[""]],"toggleCompleted"],null],null],["flush-element"],["close-element"],["text","\\n  "],["open-element","label",[]],["dynamic-attr","ondblclick",["helper",["action"],[["get",[""]],"startEditing"],null],null],["flush-element"],["append",["unknown",["todo","title"]],false],["close-element"],["text","\\n  "],["open-element","button",[]],["dynamic-attr","onclick",["helper",["action"],[["get",[""]],"removeTodo"],null],null],["static-attr","class","destroy"],["flush-element"],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","input",[]],["static-attr","type","text"],["static-attr","class","edit"],["dynamic-attr","value",["unknown",["todo","title"]],null],["dynamic-attr","onblur",["helper",["action"],[["get",[""]],"doneEditing"],[["value"],["target.value"]]],null],["dynamic-attr","onkeydown",["helper",["action"],[["get",[""]],"handleKeydown"],null],null],["static-attr","autofocus",""],["flush-element"],["close-element"]],"locals":[],"named":[],"yields":[],"blocks":[]}',meta:{moduleName:"todomvc/templates/components/todo-item.hbs"}})}),define("todomvc/templates/components/todo-list",["exports"],function(e){e.default=Ember.HTMLBars.template({id:null,block:'{"statements":[["block",["if"],[["get",["todos","length"]]],null,2]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","      "],["append",["helper",["todo-item"],null,[["todo","onStartEdit","onEndEdit"],[["get",["todo"]],["helper",["action"],[["get",[""]],"disableToggle"],null],["helper",["action"],[["get",[""]],"enableToggle"],null]]]],false],["text","\\n"]],"locals":["todo"]},{"statements":[["text","    "],["open-element","input",[]],["static-attr","type","checkbox"],["static-attr","id","toggle-all"],["dynamic-attr","checked",["unknown",["allCompleted"]],null],["dynamic-attr","onchange",["helper",["action"],[["get",[""]],"toggleAll"],null],null],["flush-element"],["close-element"],["text","\\n"]],"locals":[]},{"statements":[["block",["if"],[["get",["canToggle"]]],null,1],["text","  "],["open-element","ul",[]],["static-attr","id","todo-list"],["static-attr","class","todo-list"],["flush-element"],["text","\\n"],["block",["each"],[["get",["todos"]]],null,0],["text","  "],["close-element"],["text","\\n"]],"locals":[]}]}',meta:{moduleName:"todomvc/templates/components/todo-list.hbs"}})}),define("todomvc/templates/index",["exports"],function(e){e.default=Ember.HTMLBars.template({id:null,block:'{"statements":[["block",["if"],[["get",["model","length"]]],null,0]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["text","  "],["append",["helper",["todo-list"],null,[["todos"],[["get",["model"]]]]],false],["text","\\n"]],"locals":[]}]}',meta:{moduleName:"todomvc/templates/index.hbs"}})}),define("todomvc/config/environment",["ember"],function(e){var t="todomvc";try{var n=t+"/config/environment",o=document.querySelector('meta[name="'+n+'"]').getAttribute("content"),l=JSON.parse(unescape(o)),a={default:l};return Object.defineProperty(a,"__esModule",{value:!0}),a}catch(e){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests||require("todomvc/app").default.create({name:"todomvc",version:"0.0.0+a902580a"});